---
interface Props {
    title: string;
}

const {title} = Astro.props;
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
---

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="description" content="Astro description"/>
    <meta name="viewport" content="width=device-width"/>
    <link rel="icon" type="image/svg+xml" href="/Assets/favicon.svg"/>
    <meta name="generator" content={Astro.generator}/>
    <meta property="og:title" content="RevenzMind" />
    <meta property="og:type" content="ðŸ˜ºðŸ’– wanna see my website?" />
    <meta property="og:url" content="https://revenzmind.vercel.app/" />
    <meta property="og:image" content="https://japi.rest/discord/v1/user/1149804799877972059/avatar" />
    <meta property="og:description" content="Site description" />
    <meta name="theme-color" content="#000000">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500&display=swap" rel="stylesheet">
    <title>{title}</title>
</head>
<body>
<Header/>
<main>
    <slot/>
</main>
<Footer/>
</body>
</html>

<style is:global>

    * {
        cursor: none !important;
        margin: 0;
        box-sizing: border-box;
    }

    :root {
        --background: #0c0c0c;
        --background-component: #0f0f0f63;
        --background-component-selected: #1a1a1a63;
        --background-style-color: #242424;
        --accent-color: #b8b8b8;
        --border-color: #1c1d20;
    }

    ::-webkit-scrollbar {
        visibility: hidden;
    }

    html {
        font-family: "Inter", sans-serif;
        background: var(--background);
        background-image: radial-gradient(
                circle at 0 0,
                var(--background-style-color) 1px,
                transparent 1px
        );
        background-size: 16px 16px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    body {

        width: 85%;
    }

    body, html {
        height: 100%;
    }

    /*Slot CSS Styles */
    main {
        margin-top: 90px;
        min-height: 72vh;

    }

    hr {
        height: 1px;
        border: 0;
        width: 100%;
        margin-top: 20px;
        margin-bottom: 20px;
        background-image: -webkit-linear-gradient(
                left,
                transparent,
                var(--border-color),
                transparent
        );
    }
</style>

<!--Styles Tooltip -->

<style is:global>
    [data-tooltip]:before {
        /* needed - do not touch */
        content: attr(data-tooltip);
        position: absolute;
        opacity: 0;

        /* customizable */
        font-size: 0.7rem;
        transition: all 0.15s ease;
        padding: 10px;
        color: rgb(156, 156, 156);
        border: 1px solid var(--border-color);

        border-radius: 1vh;
    }

    [data-tooltip]:hover:before {
        /* needed - do not touch */
        opacity: 1;

        /* customizable */
        background: var(--background-component-selected);
        backdrop-filter: blur(10px);
    }

    [data-tooltip]:not([data-tooltip-persistent]):before {
        pointer-events: none;
    }
</style>

<!--Cursor-->

<style is:global>
    .cursor {
        border: 1px solid var(--border-color);

        position: fixed;
        top: 0;
        left: 0;
        width: 20px;
        height: 20px;
        pointer-events: none;
        transform: translate(-50%, -50%);
        border-radius: 10%;
        background-color: var(--background-component);
        backdrop-filter: blur(1px);
        transition: border 0.3s linear;
    }

    .cursor_pointer {
        width: 5px;
        height: 5px;
        border-radius: 50%;
        background-color: var(--accent-color);
        position: fixed;
        top: 0;
        left: 0;
        transform: translate(-50%, -50%);
        pointer-events: none;
        transition: all 0.1s linear;
    }
</style>

<!--Cursor detect desktop-->
<script>
    function isDesktop() {
        const userAgent = navigator.userAgent.toLowerCase();
        const desktopKeywords = ["windows", "macintosh", "x11"];

        for (let keyword of desktopKeywords) {
            if (userAgent.indexOf(keyword) !== -1) {
                return true;
            }
        }

        return false;
    }

    if (isDesktop()) {
        const cursor = document.createElement("div");
        const pointer = document.createElement("div");

        cursor.classList.add("cursor");
        pointer.classList.add("cursor_pointer");

        document.body.appendChild(cursor);
        document.body.appendChild(pointer);

        let mouseX = 0;
        let mouseY = 0;

        if (cursor && pointer) {
            const updateCursor = () => {
                const dx = mouseX - parseInt(cursor.style.left || "0");
                const dy = mouseY - parseInt(cursor.style.top || "0");

                const speed = 1; // Puedes ajustar la velocidad de seguimiento

                cursor.style.left = `${
                    parseInt(cursor.style.left || "0") + dx * speed
                }px`;
                cursor.style.top = `${
                    parseInt(cursor.style.top || "0") + dy * speed
                }px`;
                pointer.style.left = `${mouseX}px`;
                pointer.style.top = `${mouseY}px`;

                requestAnimationFrame(updateCursor);
            };

            document.addEventListener("mousemove", (e) => {
                mouseX = e.clientX;
                mouseY = e.clientY;
                const hoveredElement = document.elementFromPoint(mouseX, mouseY);

                if (
                    hoveredElement &&
                    window.getComputedStyle(hoveredElement).cursor === "pointer"
                ) {
                    cursor.classList.add("hover");
                } else {
                    cursor.classList.remove("hover");
                }
            });

            requestAnimationFrame(updateCursor);
        }
    }
</script>
